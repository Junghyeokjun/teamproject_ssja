<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="teamproject.ssja.mapper.AdminPageMapper">

	<!-- 일일주문내역 -->	
 <select id="getDailyPurList" resultType="OrderDetailsDto">
	    <![CDATA[		
	   SELECT
    o.O_NO,
    pur.M_NO,
    p.PRO_NAME,
    o.O_QUANTITY    
FROM
    orders o
JOIN
    product p ON o.pro_no = p.pro_no
JOIN
    purchase pur ON o.pur_no = pur.pur_no

WHERE TRUNC(pur_date) =  TRUNC(sysdate)

ORDER BY
    o.o_no desc
	     ]]>
	</select> 
	
		<!-- 일일가입자내역 -->		
	<select id="getDailyMList" resultType="MembersDto">
	    <![CDATA[		
	   SELECT *
FROM members
WHERE TRUNC(m_date) =  TRUNC(sysdate)

ORDER BY
    m_no desc
	     ]]>
	</select>	
	
		<!-- 일일문의내역 -->		
	<select id="getDailyQnaList" resultType="QnaBoardDto">
	    <![CDATA[		
	   SELECT *
	   FROM board 
	   where b_c_no=20 and TRUNC(b_date) =  TRUNC(sysdate)
	   ORDER BY
    b_no desc
	     ]]>
	</select>
		
	<select id="getDailyPrice" resultType="int">
	    <![CDATA[		
	    SELECT NVL(sum(p_price), 0) as Daily_price
		FROM profit
		WHERE TRUNC(p_date) = TRUNC(sysdate)
	     ]]>
	</select>
	
	<select id="getDailyPurcount" resultType="int">
	    <![CDATA[		
	     SELECT
    COUNT(*)
FROM
    orders o
JOIN
    purchase pur ON o.pur_no = pur.pur_no
WHERE
    TRUNC(pur.pur_date) = TRUNC(SYSDATE)
	     ]]>
	</select>
	
	<select id="getDailyMcount" resultType="int">
	    <![CDATA[		
	   SELECT count(*)
FROM members
WHERE TRUNC(m_date) =  TRUNC(sysdate)
	     ]]>
	</select>	
	
	<select id="getDailyQnaCount" resultType="int">
	    <![CDATA[		
	   SELECT count(*) 
	   FROM board 
	   where b_c_no=20 and TRUNC(b_date) =  TRUNC(sysdate)
	     ]]>
	</select>
	
	<!-- 판매회원목록 -->		
	<select id="getVendorsList" resultType="VendorDetailsDto">
	    <![CDATA[		
select v.v_no, m.m_id, m.m_name, v.v_bizname, v.v_license from members m,vendor v where m.m_no=v.m_no
order by v.v_no desc
	     ]]>
	</select>
	
	<resultMap id="MembersListMap" type="MembersDto">
		<id property="M_NO" column="M_NO" />
		<result property="M_ID" column="M_ID" />
		<result property="M_PW" column="M_PW" />
		<result property="M_NAME" column="M_NAME" />
		<result property="M_ADDRESS1" column="M_ADDRESS1" />
		<result property="M_ADDRESS2" column="M_ADDRESS2" />
		<result property="M_ZIPCODE" column="M_ZIPCODE" />
    <result property="M_BIRTH" column="M_BIRTH" />
		<result property="M_GRADE" column="M_GRADE" />
		<result property="M_EMAIL" column="M_EMAIL" />
		<result property="M_PHONE" column="M_PHONE" />
		<result property="M_POINT" column="M_POINT" />
		<result property="M_DATE" column="M_DATE" />
		<result property="M_NICKNAME" column="M_NICKNAME" />
	</resultMap>

	<select id="getMemberListTotalCount" resultType="long">    
    <![CDATA[
              	SELECT count(*) FROM Members WHERE M_DELETEDATE IS NULL
        ]]>
	</select>

	<select id="getMemberListWithPaging" resultMap="MembersListMap">    
    <![CDATA[
	select * from 
        	(
			    select
			        rownum rnum , A.*
			    from 
			    (SELECT * FROM Members WHERE M_DELETEDATE IS NULL ORDER BY M_NO desc) A 
		    	where rownum <= #{pageNum} * #{amount} 
		    )
			where rnum > (#{pageNum}-1) * #{amount}
    ]]>
	</select>
	
	<resultMap id="MembersSearchListMap" type="MembersSearchDto">
		<id property="M_NO" column="M_NO" />
		<result property="M_ID" column="M_ID" />
		<result property="M_PW" column="M_PW" />
		<result property="M_NAME" column="M_NAME" />
		<result property="M_ADDRESS1" column="M_ADDRESS1" />
		<result property="M_ADDRESS2" column="M_ADDRESS2" />
		<result property="M_ZIPCODE" column="M_ZIPCODE" />
		<result property="M_BIRTH" column="M_BIRTH" />
		<result property="M_GRADE" column="M_GRADE" />
		<result property="M_EMAIL" column="M_EMAIL" />
		<result property="M_PHONE" column="M_PHONE" />
		<result property="M_POINT" column="M_POINT" />
		<result property="M_DATE" column="M_DATE" />
		<result property="M_NICKNAME" column="M_NICKNAME" />
		<result property="type" column="type" />
		<result property="keyword" column="keyword" />
	</resultMap>

	<select id="getMemberSearchList"  parameterType="string"   resultMap="MembersSearchListMap">    

	SELECT * FROM Members WHERE M_DELETEDATE IS NULL                
               <choose>
               <when test="#{type} != null and type.equals('m_name')">
                and m_name = '${keyword}'
               </when>
                <when test="#{type} != null and type.equals('m_id')">
                and m_id = '${keyword}'
               </when>
                <when test="#{type} != null and type.equals('m_grade')">
                and m_grade = '${keyword}'
               </when>
               </choose>          
               
	</select>		
	
    <select id="readMemberId" resultMap="MembersListMap">
    	<![CDATA[
        	select * from Members where M_NO = #{M_NO}
        ]]>
	</select>
	
	 <update id="updateMember" parameterType="MembersDto">
		<![CDATA[
        	update Members 
        	set M_ID = #{M_ID},M_NAME = #{M_NAME}, M_ADDRESS1 = #{M_ADDRESS1},
        	M_GRADE = #{M_GRADE}, M_EMAIL = #{M_EMAIL}, M_PHONE = #{M_PHONE}, M_POINT = #{M_POINT}, M_NICKNAME = #{M_NICKNAME}
   	        	where M_NO = #{M_NO}
        ]]>
	</update>	
	
	<!-- 참조 무결성 제약 조건을 유지하기 위해 삭제 대신 m_deletedate를 sysdate로 처리  -->
	<update id="deleteMember" parameterType="MembersDto">
		 <![CDATA[
		 UPDATE members 
			SET m_deletedate = sysdate
			WHERE M_NO = #{M_NO}
        ]]>
	</update>
				
	<resultMap id="ProductsListMap" type="ProductDto">
		<id property="PRO_NO" column="PRO_NO" />
		<result property="V_NO" column="V_NO" />
		<result property="P_C_NO" column="P_C_NO" />
		<result property="PRO_PRICE" column="PRO_PRICE" />
		<result property="PRO_QUANTITY" column="PRO_QUANTITY" />
		<result property="PRO_BANNERIMG" column="PRO_BANNERIMG" />
		<result property="PRO_WISH" column="PRO_WISH" />
		<result property="PRO_SELLCOUNT" column="PRO_SELLCOUNT" />
		<result property="PRO_HIT" column="PRO_HIT" />
		<result property="PRO_BIZNAME" column="PRO_BIZNAME" />
		<result property="PRO_NAME" column="PRO_NAME" />
		<result property="PRO_DATE" column="PRO_DATE" />
	</resultMap>

	<select id="getProductListTotalCount" resultType="long">    
    <![CDATA[
              	SELECT count(*) FROM Product 
        ]]>
	</select>

	<select id="getProductListWithPaging" 	resultMap="ProductsListMap">    
    <![CDATA[
	select * from 
        	(
			    select
			        rownum rnum , A.*
			    from 
			    (SELECT  * FROM Product order by PRO_NO desc) A 
		    	where rownum <= #{pageNum} * #{amount} 
		    )
			where rnum > (#{pageNum}-1) * #{amount}
    ]]>
	</select>
	
	<resultMap id="ProductsSearchListMap" type="ProductsSearchDto">
		<id property="PRO_NO" column="PRO_NO" />
		<result property="V_NO" column="V_NO" />
		<result property="P_C_NO" column="P_C_NO" />
		<result property="PRO_PRICE" column="PRO_PRICE" />
		<result property="PRO_QUANTITY" column="PRO_QUANTITY" />
		<result property="PRO_BANNERIMG" column="PRO_BANNERIMG" />
		<result property="PRO_WISH" column="PRO_WISH" />
		<result property="PRO_SELLCOUNT" column="PRO_SELLCOUNT" />
		<result property="PRO_HIT" column="PRO_HIT" />
		<result property="PRO_BIZNAME" column="PRO_BIZNAME" />
		<result property="PRO_NAME" column="PRO_NAME" />
		<result property="PRO_DATE" column="PRO_DATE" />
		<result property="type" column="type" />
		<result property="keyword" column="keyword" />
	</resultMap>
	
	<select id="getProductsSearchList"  parameterType="string"   resultMap="ProductsSearchListMap">    

	SELECT  * FROM Product              
                where                
               <choose>
               <when test="#{type} != null and type.equals('PRO_NO')">
                PRO_NO = '${keyword}'
               </when>      
               <when test="#{type} != null and type.equals('PRO_BIZNAME')">
                PRO_BIZNAME = '${keyword}'
               </when> 
               <when test="#{type} != null and type.equals('PRO_NAME')">
                PRO_NAME LIKE '%${keyword}%'
               </when> 
                        
               </choose>                          
	</select>	
	
	<select id="readProductId"  resultMap="ProductsListMap">
    	<![CDATA[
        	select * from product where PRO_NO = #{PRO_NO}
        ]]>
	</select>
	
	 <update id="updateProduct" parameterType="ProductDto">
		<![CDATA[
        	update product 
        	set PRO_NAME = #{PRO_NAME},
        	PRO_PRICE = #{PRO_PRICE}, PRO_QUANTITY = #{PRO_QUANTITY}
   	        	where PRO_NO = #{PRO_NO}
        ]]>
	</update>	
	
<update id="deleteProduct"  parameterType="ProductDto">
 <![CDATA[
	update product set PRO_QUANTITY = 0, pro_bannerimg = '/images/utilities/non_exist_item.png', 
	PRO_WISH=0, PRO_SELLCOUNT=0, PRO_HIT=0 where PRO_NO = #{PRO_NO}
	 ]]>
</update>

 	<select id="getReviewsByProductId"  resultType="ProductReviewsDto">    
    <![CDATA[	
      SELECT B.B_WRITER, 
       B.B_CONTENT, 
       NVL(TO_CHAR(B.B_DATE, 'YYYY-MM-DD'), '0000-00-00') AS B_DATE, 
       B.B_EVAL, B.B_NO
  FROM PRODUCT P
 INNER JOIN BOARD B ON P.PRO_NO = B.PRO_NO
 WHERE b_c_no=30 and P.PRO_NO = #{PRO_NO}
    ]]>
	</select> 
	
	<select id="getReplyReviewsByProductId"  resultType="ProductReviewReplyDto">    
    <![CDATA[	
      SELECT r.r_WRITER,r.r_CONTENT,        
NVL(TO_CHAR(r.r_DATE, 'YYYY-MM-DD'), '0000-00-00') AS r_DATE, 
r.r_NO FROM BOARD B, REPLYS R WHERE B.B_NO=R.B_NO and R.B_NO=#{B_NO}
    ]]>
	</select>
	
	
	<delete id="deleteReviewProduct" parameterType="ProductReviewsDto">
		 <![CDATA[
        	delete FROM BOARD where B_NO= #{B_NO}
        ]]>
	</delete>
	
	<delete id="deleteReplyReviewProduct" parameterType="ProductReviewReplyDto">
		 <![CDATA[
        	delete FROM REPLYS where R_NO= #{R_NO}
        ]]>
	</delete>
	
	<resultMap id="OrdersListMap" type="OrderDetailsDto">
		<id property="O_NO" column="O_NO" />
		<result property="M_NO" column="M_NO" />
		<result property="PRO_NAME" column="PRO_NAME" />
		<result property="O_QUANTITY" column="O_QUANTITY" />
		<result property="PUR_TOT" column="PUR_TOT" />
		<result property="PUR_DATE" column="PUR_DATE" />
		<result property="PUR_DVADDRESS" column="PUR_DVADDRESS" />
		<result property="PUR_DV" column="PUR_DV" />
	</resultMap>

	<select id="getOrdersListTotalCount" resultType="long">    
    <![CDATA[
              	SELECT count(*) from orders o, purchase p, product pro 
where o.pur_no=p.pur_no
and pro.pro_no=o.pro_no order by o.o_no desc 
        ]]>
	</select>

	<select id="getOrdersListWithPaging" 	resultType="OrderDetailsDto">    
    <![CDATA[
	select * from 
        	(
			    select
			        rownum rnum , A.*
			    from 
			    (select o.o_no,p.m_no,
			    CASE 
        WHEN LENGTH(pro.pro_name) <= 12 THEN pro.pro_name
        ELSE SUBSTR(pro.pro_name, 1, 12) || ', 외'
    END AS pro_name,
			    o.o_quantity, p.pur_tot,p.pur_date,p.pur_dvaddress,p.pur_dv 
from orders o, purchase p, product pro 
where o.pur_no=p.pur_no
and pro.pro_no=o.pro_no order by o.o_no desc) A 
		    	where rownum <= #{pageNum} * #{amount} 
		    )
			where rnum > (#{pageNum}-1) * #{amount}
    ]]>
	</select>
	
	<resultMap id="OrdersSearchListMap"  type="OrdersSearchDto">
		<id property="O_NO" column="O_NO" />
		<result property="M_NO" column="M_NO" />
		<result property="PRO_NAME" column="PRO_NAME" />
		<result property="O_QUANTITY" column="O_QUANTITY" />
		<result property="PUR_TOT" column="PUR_TOT" />
		<result property="PUR_DATE" column="PUR_DATE" />
		<result property="PUR_DVADDRESS" column="PUR_DVADDRESS" />
		<result property="PUR_DV" column="PUR_DV" />
		<result property="type" column="type" />
		<result property="keyword" column="keyword" />
	</resultMap>
	
	<select id="getOrdersSearchList"  parameterType="string"   resultMap="OrdersSearchListMap">    
	
	select o.o_no,p.m_no,
	pro.pro_name,o.o_quantity, p.pur_tot,p.pur_date,p.pur_dvaddress,p.pur_dv 
from orders o, purchase p, product pro 
where o.pur_no=p.pur_no
and pro.pro_no=o.pro_no               
               <choose>
               <when test="#{type} != null and type.equals('O_NO')">
               and o.o_no = '${keyword}'
               </when>      
               <when test="#{type} != null and type.equals('M_NO')">
                and p.m_no = '${keyword}'
               </when>                         
               </choose>                          
	
	</select>		
	
	
	
	<resultMap id="CouponsListMap" type="CouponDTO">
		<id property="c_no" column="c_no" />
		<result property="c_startdate" column="c_startdate" />
		<result property="c_duedate" column="c_duedate" />
		<result property="c_name" column="c_name" />
		<result property="c_dcper" column="c_dcper" />		
	</resultMap>

	<select id="getCouponListTotalCount" resultType="long">    
    <![CDATA[
              	SELECT count(*) FROM coupon 
        ]]>
	</select>

	<select id="getCouponListWithPaging" 	resultMap="CouponsListMap">    
    <![CDATA[
	select * from 
        	(
			    select
			        rownum rnum , A.*
			    from 
			    (SELECT  * FROM coupon order by c_no desc) A 
		    	where rownum <= #{pageNum} * #{amount} 
		    )
			where rnum > (#{pageNum}-1) * #{amount}
    ]]>
	</select>
	
	<insert id="insertCoupon">
    <![CDATA[

        	INSERT INTO coupon (c_no,c_startdate,c_duedate,c_name,c_dcper)
        	VALUES (C_SEQ.NEXTVAL, #{c_startdate}, #{c_duedate}, #{c_name}, #{c_dcper})
]]>        

	</insert>
	
	<select id="readCoupon" resultMap="CouponsListMap">
    	<![CDATA[
        	select * from coupon where c_no=#{c_no}
        ]]>
	</select>
	
	<update id="updateCoupon" parameterType="CouponDTO">
		<![CDATA[
        	update coupon set c_name=#{c_name}, c_dcper=#{c_dcper},c_startdate=#{c_startdate},c_duedate=#{c_duedate} where c_no=#{c_no}
        ]]>
	</update>

	<delete id="deleteCoupon" parameterType="CouponDTO">
		 <![CDATA[
        	delete from coupon where c_no = #{c_no}
        ]]>
	</delete>
	
	
	
 <resultMap id="SalesListMap" type="ProfitDto">
		<result property="P_DATE" column="P_DATE" />
		<result property="P_PRICE" column="P_PRICE" />
	</resultMap>
	
	<select id="dailyMCountsList" resultType="MAP">    
    <![CDATA[

SELECT TO_CHAR(m_date, 'MM-DD') AS m_date, COUNT(*) AS m_count
FROM members
WHERE m_date >= TRUNC(SYSDATE) - 7
  AND m_date < TRUNC(SYSDATE) +1 
GROUP BY TO_CHAR(m_date, 'MM-DD')
ORDER BY m_date
        ]]>
	</select>
	
	<select id="getDailySalesList" resultType="MAP">    
    <![CDATA[

SELECT TO_CHAR(p_date, 'MM-DD') AS p_date, p_price 
FROM profit 
WHERE p_date >= TRUNC(SYSDATE) - 7
AND p_date < TRUNC(SYSDATE) +1
ORDER BY p_date
        ]]>
	</select>
	
	<select id="getWeeklySalesList" resultType="MAP">    
    <![CDATA[
SELECT 
    TO_CHAR(p_date, 'MM') || '-' || 
    (1 + MOD(CEIL((EXTRACT(DAY FROM p_date) - 1) / 7) - 1, 4)) || '주차' AS week,
    SUM(p_price) AS WeeklyTotalPay
FROM 
    profit
WHERE 
    p_date >= TRUNC(SYSDATE) - (4 * 7)  -- 최근 4주간 데이터만 선택
GROUP BY
    TO_CHAR(p_date, 'MM'),
    1 + MOD(CEIL((EXTRACT(DAY FROM p_date) - 1) / 7) - 1, 4)
ORDER BY 
    TO_CHAR(p_date, 'MM')

        ]]>
   </select> 

<select id="getMonthlySalesList" resultType="MAP">    
    <![CDATA[
select TO_CHAR(p_date,'YYYY-MM') as month,
    SUM(p_price) AS MonthlyTotalPay
 from profit 
 GROUP BY
    TO_CHAR(p_date, 'YYYY-MM')
 order by month


        ]]>
	</select>	
	<select id="getYearlySalesList" resultType="MAP">    
    <![CDATA[
SELECT
    TO_CHAR(p_date, 'YYYY') AS Year,
    SUM(p_price) AS YearlyTotalPay
FROM
    profit
GROUP BY
    TO_CHAR(p_date, 'YYYY')
ORDER BY
    Year

        ]]>
	</select>	
	
 <select id="getSalesDataByDate"  resultType="MAP">
    <![CDATA[
    SELECT count(*),sum(pur_tot) 
FROM purchase 
WHERE TO_CHAR(pur_date, 'YY/MM/DD') = TO_CHAR(sysdate, 'YY/MM/DD')
    ]]>
</select> 

<select id="dailyVisitCountsList" resultType="MAP">    
    <![CDATA[

SELECT VISIT_DATE, VISIT_COUNT
FROM visitor_count
WHERE VISIT_DATE >= TRUNC(SYSDATE) - 7
  AND VISIT_DATE < TRUNC(SYSDATE) + 1
ORDER BY VISIT_DATE
        ]]>
	</select>

<resultMap id="qnasListMap" type="QnaBoardDto">
		<id property="B_NO" column="B_NO" />
		<result property="M_NO" column="M_NO" />
		<result property="B_C_NO" column="B_C_NO" />
		<result property="B_WRITER" column="B_WRITER" />
		<result property="B_TITLE" column="B_TITLE" />
		<result property="B_CONTENT" column="B_CONTENT" />
		<result property="B_DATE" column="B_DATE" />
		<result property="B_LIKE" column="B_LIKE" />
		<result property="B_HIT" column="B_HIT" />
		<result property="B_EVAL" column="B_EVAL" />
		<result property="PRO_NO" column="PRO_NO" />
	</resultMap>

	<select id="getQnaListTotalCount" resultType="long">    
    <![CDATA[
    SELECT count(*) FROM board where b_c_no=20
    
        ]]>
	</select>

	<select id="getQnaListWithPaging" resultMap="qnasListMap">    
    <![CDATA[
	select * from 
        	(
			    select
			        rownum rnum , A.*
			    from 
			    (SELECT * FROM board where b_c_no=20 order by b_no desc ) A 
		    	where rownum <= #{pageNum} * #{amount} 
		    )
			where rnum > (#{pageNum}-1) * #{amount}
    ]]>
	</select>
	
	<resultMap id="QnaSearchListMap" type="QnaSearchDto">
		<id property="B_NO" column="B_NO" />
		<result property="M_NO" column="M_NO" />
		<result property="B_C_NO" column="B_C_NO" />
		<result property="B_WRITER" column="B_WRITER" />
		<result property="B_TITLE" column="B_TITLE" />
		<result property="B_CONTENT" column="B_CONTENT" />
		<result property="B_DATE" column="B_DATE" />
		<result property="B_LIKE" column="B_LIKE" />
		<result property="B_HIT" column="B_HIT" />
		<result property="B_EVAL" column="B_EVAL" />
		<result property="PRO_NO" column="PRO_NO" />
		<result property="type" column="type" />
		<result property="keyword" column="keyword" />
	</resultMap>

	<select id="getQnaSearchList"  parameterType="string"   resultMap="QnaSearchListMap">    

SELECT * FROM board where  B_C_NO=20           
               <choose>
               <when test="#{type} != null and type.equals('M_NO')">
                 and M_NO = '${keyword}'
               </when>
                <when test="#{type} != null and type.equals('B_TITLE')">
                 and B_TITLE  LIKE '%${keyword}%'
               </when>
                <when test="#{type} != null and type.equals('B_CONTENT')">
                 and B_CONTENT LIKE '%${keyword}%'
               </when>
               </choose>                  
               
	</select>	
	
	<select id="readQna" resultMap="qnasListMap">
    	<![CDATA[
        	select * from board where B_C_NO=20 and B_NO = #{B_NO}
        ]]>
	</select>
	
	 <update id="updateQna" parameterType="QnaBoardDto">
		<![CDATA[
        	update board set B_WRITER=#{B_WRITER}, B_TITLE=#{B_TITLE},B_CONTENT=#{B_CONTENT} where B_NO=#{B_NO}
        ]]>
	</update>

	<delete id="deleteQna" parameterType="QnaBoardDto">
		 <![CDATA[
        	delete FROM board where B_C_NO=20 and B_NO = #{B_NO}
        ]]>
	</delete>
	
 <select id="totalDailyProfitData" resultType="ProfitDto">
  SELECT TO_CHAR(P_DATE, 'YYYY-MM-DD') AS P_DATE, SUM(p_price) AS P_PRICE
FROM   profit GROUP BY   TO_CHAR(P_DATE, 'YYYY-MM-DD') ORDER BY   P_DATE desc
 </select>
	 <select id="totalMonthlyProfitData" resultType="ProfitDto">
 SELECT TO_CHAR(P_DATE, 'YYYY-MM') AS P_DATE, SUM(p_price) AS P_PRICE
FROM   profit GROUP BY   TO_CHAR(P_DATE, 'YYYY-MM') ORDER BY   P_DATE desc
 </select>
  <select id="totalYearlyProfitData" resultType="ProfitDto">
  SELECT TO_CHAR(P_DATE, 'YYYY') AS P_DATE, SUM(p_price) AS P_PRICE
FROM   profit GROUP BY   TO_CHAR(P_DATE, 'YYYY') ORDER BY   P_DATE desc
 </select>
	
	<select id="getListMemberNo" resultType="long">
	SELECT m_no FROM members
	</select>
	
	
      <update id="insertCouponToMembers" parameterType="java.util.List">
    <foreach collection="list" item="m_no" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL">
        INTO ownedcoupon (m_no, c_no)
        VALUES (#{m_no}, c_seq.currval)
    </foreach>
</update>

<insert id="renewYesterdayProfit">
INSERT INTO profit (p_date, p_price)
SELECT 
    TRUNC(SYSDATE) - 1 AS date_column,
    SUM(pur_tot) AS total_purchase
FROM 
    purchase
WHERE 
     TRUNC(pur_date) = TRUNC(SYSDATE) - 1
</insert>	

<delete id="deleteExpiredCoupon" >
DELETE from coupon where c_duedate &lt; sysdate
</delete>
	
	</mapper>