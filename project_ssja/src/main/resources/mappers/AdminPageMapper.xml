<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="teamproject.ssja.mapper.AdminPageMapper">
	
	<select id="getDailyPrice" resultType="int">
	    <![CDATA[		
	    SELECT NVL(sum(p_price), 0) as Daily_price
		FROM profit
		WHERE TRUNC(p_date) = TRUNC(sysdate)
	     ]]>
	</select>
	
	<select id="getDailyPurcount" resultType="int">
	    <![CDATA[		
	    SELECT count(*) as Daily_purcount
		FROM purchase
		WHERE TRUNC(pur_date) =  TRUNC(sysdate)
	     ]]>
	</select>
	
	<select id="getDailyMcount" resultType="int">
	    <![CDATA[		
	   SELECT count(*)
FROM members
WHERE TRUNC(m_date) =  TRUNC(sysdate)
	     ]]>
	</select>
	
	
	<select id="getDailyQnaCount" resultType="int">
	    <![CDATA[		
	   SELECT count(*) 
	   FROM board 
	   where b_c_no=20 and TRUNC(b_date) =  TRUNC(sysdate)
	     ]]>
	</select>

	<resultMap id="MembersListMap" type="MembersDto">
		<id property="M_NO" column="M_NO" />
		<result property="M_ID" column="M_ID" />
		<result property="M_PW" column="M_PW" />
		<result property="M_NAME" column="M_NAME" />
		<result property="M_ADDRESS1" column="M_ADDRESS1" />
		<result property="M_ADDRESS2" column="M_ADDRESS2" />
		<result property="M_ZIPCODE" column="M_ZIPCODE" />
    <result property="M_BIRTH" column="M_BIRTH" />
		<result property="M_GRADE" column="M_GRADE" />
		<result property="M_EMAIL" column="M_EMAIL" />
		<result property="M_PHONE" column="M_PHONE" />
		<result property="M_POINT" column="M_POINT" />
		<result property="M_DATE" column="M_DATE" />
		<result property="M_NICKNAME" column="M_NICKNAME" />
	</resultMap>

	<select id="getMemberListTotalCount" resultType="long">    
    <![CDATA[
              	SELECT count(*) FROM Members 
        ]]>
	</select>

	<select id="getMemberListWithPaging" resultMap="MembersListMap">    
    <![CDATA[
	select * from 
        	(
			    select
			        rownum rnum , A.*
			    from 
			    (SELECT  * FROM Members order by M_NO) A 
		    	where rownum <= #{pageNum} * #{amount} 
		    )
			where rnum > (#{pageNum}-1) * #{amount}
    ]]>
	</select>
	
	<resultMap id="MembersSearchListMap" type="MembersSearchDto">
		<id property="M_NO" column="M_NO" />
		<result property="M_ID" column="M_ID" />
		<result property="M_PW" column="M_PW" />
		<result property="M_NAME" column="M_NAME" />
		<result property="M_ADDRESS1" column="M_ADDRESS1" />
		<result property="M_ADDRESS2" column="M_ADDRESS2" />
		<result property="M_ZIPCODE" column="M_ZIPCODE" />
		<result property="M_BIRTH" column="M_BIRTH" />
		<result property="M_GRADE" column="M_GRADE" />
		<result property="M_EMAIL" column="M_EMAIL" />
		<result property="M_PHONE" column="M_PHONE" />
		<result property="M_POINT" column="M_POINT" />
		<result property="M_DATE" column="M_DATE" />
		<result property="M_NICKNAME" column="M_NICKNAME" />
		<result property="type" column="type" />
		<result property="keyword" column="keyword" />
	</resultMap>

	<select id="getMemberSearchList"  parameterType="string"   resultMap="MembersSearchListMap">    

	SELECT  * FROM Members              
                where                
               <choose>
               <when test="#{type} != null and type.equals('m_name')">
                m_name = '${keyword}'
               </when>
                <when test="#{type} != null and type.equals('m_id')">
                m_id = '${keyword}'
               </when>
                <when test="#{type} != null and type.equals('m_grade')">
                m_grade = '${keyword}'
               </when>
               </choose>          
               
	</select>		
	<!-- 참조 무결성 제약 조건을 유지하기 위해 삭제 대신 m_deletedate를 sysdate로 처리  -->
	<update id="deleteMember" parameterType="MembersDto">
		 <![CDATA[
		 UPDATE members 
			SET m_deletedate = sysdate
			WHERE M_NO = #{M_NO}
        ]]>
	</update>
				
	<resultMap id="ProductsListMap" type="ProductDto">
		<id property="PRO_NO" column="PRO_NO" />
		<result property="V_NO" column="V_NO" />
		<result property="P_C_NO" column="P_C_NO" />
		<result property="PRO_PRICE" column="PRO_PRICE" />
		<result property="PRO_QUANTITY" column="PRO_QUANTITY" />
		<result property="PRO_BANNERIMG" column="PRO_BANNERIMG" />
		<result property="PRO_WISH" column="PRO_WISH" />
		<result property="PRO_SELLCOUNT" column="PRO_SELLCOUNT" />
		<result property="PRO_HIT" column="PRO_HIT" />
		<result property="PRO_BIZNAME" column="PRO_BIZNAME" />
		<result property="PRO_NAME" column="PRO_NAME" />
		<result property="PRO_DATE" column="PRO_DATE" />
	</resultMap>

	<select id="getProductListTotalCount" resultType="long">    
    <![CDATA[
              	SELECT count(*) FROM Product 
        ]]>
	</select>

	<select id="getProductListWithPaging" 	resultMap="ProductsListMap">    
    <![CDATA[
	select * from 
        	(
			    select
			        rownum rnum , A.*
			    from 
			    (SELECT  * FROM Product order by PRO_NO desc) A 
		    	where rownum <= #{pageNum} * #{amount} 
		    )
			where rnum > (#{pageNum}-1) * #{amount}
    ]]>
	</select>
	
	<resultMap id="ProductsSearchListMap" type="ProductsSearchDto">
		<id property="PRO_NO" column="PRO_NO" />
		<result property="V_NO" column="V_NO" />
		<result property="P_C_NO" column="P_C_NO" />
		<result property="PRO_PRICE" column="PRO_PRICE" />
		<result property="PRO_QUANTITY" column="PRO_QUANTITY" />
		<result property="PRO_BANNERIMG" column="PRO_BANNERIMG" />
		<result property="PRO_WISH" column="PRO_WISH" />
		<result property="PRO_SELLCOUNT" column="PRO_SELLCOUNT" />
		<result property="PRO_HIT" column="PRO_HIT" />
		<result property="PRO_BIZNAME" column="PRO_BIZNAME" />
		<result property="PRO_NAME" column="PRO_NAME" />
		<result property="PRO_DATE" column="PRO_DATE" />
		<result property="type" column="type" />
		<result property="keyword" column="keyword" />
	</resultMap>
	
	<select id="getProductsSearchList"  parameterType="string"   resultMap="ProductsSearchListMap">    

	SELECT  * FROM Product              
                where                
               <choose>
               <when test="#{type} != null and type.equals('PRO_NO')">
                PRO_NO = '${keyword}'
               </when>      
               <when test="#{type} != null and type.equals('PRO_BIZNAME')">
                PRO_BIZNAME = '${keyword}'
               </when> 
                        
               </choose>                          
	</select>	
	
	<select id="readProducts" resultMap="ProductsListMap">
    	<![CDATA[
        	select * from product where PRO_NO = #{PRO_NO}
        ]]>
	</select>
	
	<update id="updateProducts" parameterType="ProductDto">
    <![CDATA[
        UPDATE product
        SET
        PRO_PRICE = #{PRO_PRICE},
        PRO_QUANTITY = #{PRO_QUANTITY},
        PRO_BIZNAME = #{PRO_BIZNAME},
        PRO_NAME = #{PRO_NAME}
        WHERE PRO_NO = #{PRO_NO}
    ]]>
</update>
	
	<resultMap id="PurchasesListMap" type="PurchaseDto">
		<id property="PUR_NO" column="PUR_NO" />
		<result property="M_NO" column="M_NO" />
		<result property="PUR_TOT" column="PUR_TOT" />
		<result property="PUR_DC" column="PUR_DC" />
		<result property="PUR_PAY" column="PUR_PAY" />
		<result property="PUR_PAYMENT" column="PUR_PAYMENT" />
		<result property="PUR_DATE" column="PUR_DATE" />
		<result property="PUR_DVADDRESS" column="PUR_DVADDRESS" />
		<result property="PUR_DV" column="PUR_DV" />
	</resultMap>

	<select id="getPerchaseListTotalCount" resultType="long">    
    <![CDATA[
              	SELECT count(*) FROM purchase 
        ]]>
	</select>

	<select id="getPerchaseListWithPaging" 	resultMap="PurchasesListMap">    
    <![CDATA[
	select * from 
        	(
			    select
			        rownum rnum , A.*
			    from 
			    (SELECT  * FROM purchase order by PUR_NO desc) A 
		    	where rownum <= #{pageNum} * #{amount} 
		    )
			where rnum > (#{pageNum}-1) * #{amount}
    ]]>
	</select>
	
	<resultMap id="PurchasesSearchListMap"  type="PurchaseSearchDto">
		<id property="PUR_NO" column="PUR_NO" />
		<result property="M_NO" column="M_NO" />
		<result property="PUR_TOT" column="PUR_TOT" />
		<result property="PUR_DC" column="PUR_DC" />
		<result property="PUR_PAY" column="PUR_PAY" />
		<result property="PUR_PAYMENT" column="PUR_PAYMENT" />
		<result property="PUR_DATE" column="PUR_DATE" />
		<result property="PUR_DVADDRESS" column="PUR_DVADDRESS" />
		<result property="PUR_DV" column="PUR_DV" />
		<result property="type" column="type" />
		<result property="keyword" column="keyword" />
	</resultMap>
	
	<select id="getPurchasesSearchList"  parameterType="string"   resultMap="PurchasesSearchListMap">    
	
	SELECT  * FROM   purchase            
                where                
               <choose>
               <when test="#{type} != null and type.equals('PUR_NO')">
                PUR_NO = '${keyword}'
               </when>      
               <when test="#{type} != null and type.equals('M_NO')">
                M_NO = '${keyword}'
               </when>                         
               </choose>                          
	
	</select>		
	
	
	
	<resultMap id="CouponsListMap" type="CouponDTO">
		<id property="c_no" column="c_no" />
		<result property="c_startdate" column="c_startdate" />
		<result property="c_duedate" column="c_duedate" />
		<result property="c_name" column="c_name" />
		<result property="c_dcper" column="c_dcper" />		
	</resultMap>

	<select id="getCouponListTotalCount" resultType="long">    
    <![CDATA[
              	SELECT count(*) FROM coupon 
        ]]>
	</select>

	<select id="getCouponListWithPaging" 	resultMap="CouponsListMap">    
    <![CDATA[
	select * from 
        	(
			    select
			        rownum rnum , A.*
			    from 
			    (SELECT  * FROM coupon order by c_no desc) A 
		    	where rownum <= #{pageNum} * #{amount} 
		    )
			where rnum > (#{pageNum}-1) * #{amount}
    ]]>
	</select>
	
	<insert id="insertCoupon">
    <![CDATA[

        	INSERT INTO coupon (c_no,c_startdate,c_duedate,c_name,c_dcper)
        	VALUES (C_SEQ.NEXTVAL, #{c_startdate}, #{c_duedate}, #{c_name}, #{c_dcper})
]]>        

	</insert>
	
	<select id="readCoupon" resultMap="CouponsListMap">
    	<![CDATA[
        	select * from coupon where c_no=#{c_no}
        ]]>
	</select>
	
	<update id="updateCoupon" parameterType="CouponDTO">
		<![CDATA[
        	update coupon set c_name=#{c_name}, c_dcper=#{c_dcper},c_startdate=#{c_startdate},c_duedate=#{c_duedate} where c_no=#{c_no}
        ]]>
	</update>

	<delete id="deleteCoupon" parameterType="CouponDTO">
		 <![CDATA[
        	delete from coupon where c_no = #{c_no}
        ]]>
	</delete>
	
	
	
 <resultMap id="SalesListMap" type="ProfitDto">
		<result property="P_DATE" column="P_DATE" />
		<result property="P_PRICE" column="P_PRICE" />
	</resultMap>
	
	<select id="dailyMCountsList" resultType="MAP">    
    <![CDATA[

SELECT TO_CHAR(m_date, 'YYYY-MM-DD') AS m_date, count(*) AS m_count
FROM members
WHERE m_date >= TRUNC(SYSDATE) - 7
  AND m_date < TRUNC(SYSDATE) + 1
GROUP BY TO_CHAR(m_date, 'YYYY-MM-DD')
ORDER BY m_date
        ]]>
	</select>
	
	<select id="getDailySalesList" resultType="MAP">    
    <![CDATA[

SELECT TO_CHAR(p_date, 'MM-DD') AS p_date, p_price 
FROM profit 
WHERE p_date >= SYSDATE - 7
AND p_date <= SYSDATE
ORDER BY p_date
        ]]>
	</select>

<select id="getMonthlySalesList" resultType="MAP">    
    <![CDATA[
select TO_CHAR(p_date,'YYYY-MM') as month,
    SUM(p_price) AS MonthlyTotalPay
 from profit 
 GROUP BY
    TO_CHAR(p_date, 'YYYY-MM')
 order by month


        ]]>
	</select>	
	<select id="getYearlySalesList" resultType="MAP">    
    <![CDATA[
SELECT
    TO_CHAR(p_date, 'YYYY') AS Year,
    SUM(p_price) AS YearlyTotalPay
FROM
    profit
GROUP BY
    TO_CHAR(p_date, 'YYYY')
ORDER BY
    Year

        ]]>
	</select>	
	
 <select id="getSalesDataByDate"  resultType="MAP">
    <![CDATA[
    SELECT count(*),sum(pur_tot) 
FROM purchase 
WHERE TO_CHAR(pur_date, 'YY/MM/DD') = TO_CHAR(sysdate, 'YY/MM/DD')
    ]]>
</select> 

<select id="dailyVisitCountsList" resultType="MAP">    
    <![CDATA[

SELECT VISIT_DATE, VISIT_COUNT
FROM visitor_count
WHERE VISIT_DATE >= TRUNC(SYSDATE) - 7
  AND VISIT_DATE < TRUNC(SYSDATE) + 1
ORDER BY VISIT_DATE
        ]]>
	</select>

<resultMap id="qnasListMap" type="QnaBoardDto">
		<id property="B_NO" column="B_NO" />
		<result property="M_NO" column="M_NO" />
		<result property="B_C_NO" column="B_C_NO" />
		<result property="B_WRITER" column="B_WRITER" />
		<result property="B_TITLE" column="B_TITLE" />
		<result property="B_CONTENT" column="B_CONTENT" />
		<result property="B_DATE" column="B_DATE" />
		<result property="B_LIKE" column="B_LIKE" />
		<result property="B_HIT" column="B_HIT" />
		<result property="B_EVAL" column="B_EVAL" />
		<result property="PRO_NO" column="PRO_NO" />
	</resultMap>

	<select id="getQnaListTotalCount" resultType="long">    
    <![CDATA[
    SELECT count(*) FROM board where b_c_no=20
    
        ]]>
	</select>

	<select id="getQnaListWithPaging" resultMap="qnasListMap">    
    <![CDATA[
	select * from 
        	(
			    select
			        rownum rnum , A.*
			    from 
			    (SELECT * FROM board where b_c_no=20 order by b_date desc ) A 
		    	where rownum <= #{pageNum} * #{amount} 
		    )
			where rnum > (#{pageNum}-1) * #{amount}
    ]]>
	</select>
	
	<resultMap id="QnaSearchListMap" type="QnaSearchDto">
		<id property="B_NO" column="B_NO" />
		<result property="M_NO" column="M_NO" />
		<result property="B_C_NO" column="B_C_NO" />
		<result property="B_WRITER" column="B_WRITER" />
		<result property="B_TITLE" column="B_TITLE" />
		<result property="B_CONTENT" column="B_CONTENT" />
		<result property="B_DATE" column="B_DATE" />
		<result property="B_LIKE" column="B_LIKE" />
		<result property="B_HIT" column="B_HIT" />
		<result property="B_EVAL" column="B_EVAL" />
		<result property="PRO_NO" column="PRO_NO" />
		<result property="type" column="type" />
		<result property="keyword" column="keyword" />
	</resultMap>

	<select id="getQnaSearchList"  parameterType="string"   resultMap="QnaSearchListMap">    

SELECT * FROM board where  B_C_NO=20           
               <choose>
               <when test="#{type} != null and type.equals('M_NO')">
                 and M_NO = '${keyword}'
               </when>
                <when test="#{type} != null and type.equals('B_TITLE')">
                 and B_TITLE  LIKE '%${keyword}%'
               </when>
                <when test="#{type} != null and type.equals('B_CONTENT')">
                 and B_CONTENT LIKE '%${keyword}%'
               </when>
               </choose>                  
               
	</select>	
	
	<select id="readQna" resultMap="qnasListMap">
    	<![CDATA[
        	select * from board where B_C_NO=20 and B_NO = #{B_NO}
        ]]>
	</select>
	
	 <update id="updateQna" parameterType="QnaBoardDto">
		<![CDATA[
        	update board set B_WRITER=#{B_WRITER}, B_TITLE=#{B_TITLE},B_CONTENT=#{B_CONTENT} where B_NO=#{B_NO}
        ]]>
	</update>

	<delete id="deleteQna" parameterType="QnaBoardDto">
		 <![CDATA[
        	delete FROM board where B_C_NO=20 and B_NO = #{B_NO}
        ]]>
	</delete>
	
 <select id="totalDailyProfitData" resultType="ProfitDto">
  SELECT TO_CHAR(P_DATE, 'YYYY-MM-DD') AS P_DATE, SUM(p_price) AS P_PRICE
FROM   profit GROUP BY   TO_CHAR(P_DATE, 'YYYY-MM-DD') ORDER BY   P_DATE desc
 </select>
	 <select id="totalMonthlyProfitData" resultType="ProfitDto">
 SELECT TO_CHAR(P_DATE, 'YYYY-MM') AS P_DATE, SUM(p_price) AS P_PRICE
FROM   profit GROUP BY   TO_CHAR(P_DATE, 'YYYY-MM') ORDER BY   P_DATE desc
 </select>
  <select id="totalYearlyProfitData" resultType="ProfitDto">
  SELECT TO_CHAR(P_DATE, 'YYYY') AS P_DATE, SUM(p_price) AS P_PRICE
FROM   profit GROUP BY   TO_CHAR(P_DATE, 'YYYY') ORDER BY   P_DATE desc
 </select>
	
	<select id="getListMemberNo" resultType="long">
	SELECT m_no FROM members
	</select>
	
	
      <update id="insertCouponToMembers" parameterType="java.util.List">
    <foreach collection="list" item="m_no" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL">
        INTO ownedcoupon (m_no, c_no)
        VALUES (#{m_no}, c_seq.currval)
    </foreach>
</update>
	
	
	
	</mapper>